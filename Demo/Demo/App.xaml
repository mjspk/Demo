<?xml version="1.0" encoding="utf-8" ?>
<Application
    x:Class="Demo.App"
    xmlns="http://xamarin.com/schemas/2014/forms"
    xmlns:x="http://schemas.microsoft.com/winfx/2009/xaml"
    xmlns:cls="clr-namespace:Demo.Controls"
    xmlns:converters="clr-namespace:Demo.Converters"
    xmlns:fi="clr-namespace:Demo.Models"
    xmlns:xct="http://xamarin.com/schemas/2020/toolkit">
    <Application.Resources>
        <converters:StatusToStyleConverter x:Key="StatusToStyleConverter" />
        <converters:TransactionStatusToIconConverter x:Key="TransactionStatusToIconConverter" />

        <xct:InvertedBoolConverter x:Key="InvertedBoolConverter" />
        <xct:IsNotNullOrEmptyConverter x:Key="IsNotNullOrEmptyConverter" />
        <xct:IntToBoolConverter x:Key="IntToBoolConverter" />

        <OnPlatform x:Key="UniPadding" x:TypeArguments="Thickness">
            <OnPlatform.Platforms>
                <On Platform="iOS" Value="0, 30, 0, 0" />
                <On Platform="Android" Value="0, 25, 0, 0" />
                <On Platform="UWP" Value="0, 0, 0, 0" />
            </OnPlatform.Platforms>
        </OnPlatform>
        <OnPlatform x:Key="SidePadding" x:TypeArguments="Thickness">
            <OnPlatform.Platforms>
                <On Platform="iOS" Value="30, 0, 0, 0" />
                <On Platform="Android" Value="15, 0, 0, 0" />
                <On Platform="UWP" Value="0, 0, 0, 0" />
            </OnPlatform.Platforms>
        </OnPlatform>
        <OnPlatform x:Key="LeftPadding" x:TypeArguments="Thickness">
            <OnPlatform.Platforms>
                <On Platform="iOS" Value="0, 0, 10, 0" />
                <On Platform="Android" Value="0, 0, 0, 0" />
                <On Platform="UWP" Value="0, 0, 0, 0" />
            </OnPlatform.Platforms>
        </OnPlatform>
        <OnPlatform x:Key="PagePadding" x:TypeArguments="Thickness">
            <OnPlatform.Platforms>
                <On Platform="iOS" Value="20,20,20,40" />
                <On Platform="Android" Value="20,20,20,20" />
            </OnPlatform.Platforms>
        </OnPlatform>
        <OnPlatform x:Key="PopupPadding" x:TypeArguments="Thickness">
            <OnPlatform.Platforms>
                <On Platform="iOS" Value="8, 8, 8, 35" />
                <On Platform="Android" Value="8, 8, 0, 20" />
                <On Platform="UWP" Value="8, 8, 8, 20" />
            </OnPlatform.Platforms>
        </OnPlatform>
        <LinearGradientBrush x:Key="PartialWhite" StartPoint="0.5,0" EndPoint="0.5,1">
            <GradientStop Offset="0.1" Color="Transparent" />
            <GradientStop Offset="1.0" Color="Black" />
        </LinearGradientBrush>
        <Color x:Key="Green">#7AE291</Color>
        <Color x:Key="Blue">#408CFF</Color>
        <Color x:Key="Purple">#9A4AFF</Color>
        <Color x:Key="HigherColor">#6EBE67</Color>
        <Color x:Key="LowerColor">#BE6767</Color>

        <Color x:Key="Primary">#3DC1F2</Color>
        <Color x:Key="PrimaryForLight">#65AFD6</Color>
        <Color x:Key="PrimaryDarker">#1A2328</Color>
        <Color x:Key="PrimaryDark">#1E5468</Color>
        <Color x:Key="PrimaryDarkLighten">#1F3F51</Color>
        <Color x:Key="PrimaryLightDarken">#F0FBFF</Color>
        <Color x:Key="PrimaryLight">#F0F7F9</Color>
        <Color x:Key="PrimaryLighter">#F4F9FB</Color>
        <Color x:Key="Secondary">#18181B</Color>
        <Color x:Key="LightBackground">#FBFEFF</Color>
        <Color x:Key="DarkBackground">#202222</Color>
        <Color x:Key="Red">#c44242</Color>
        <Color x:Key="DeleteRed">#E25757</Color>
        <Color x:Key="DeleteBackGround">#362B2B</Color>
        <Color x:Key="UnSelectedColorLight">#C9DFEC</Color>
        <Color x:Key="UnSelectedColorDark">#2D3539</Color>
        <Color x:Key="SelectedColorLight">#4DA0B9</Color>
        <Color x:Key="SubTextColorLight">#738A93</Color>
        <Color x:Key="SubTextColorDark">#C2C2C2</Color>
        <Color x:Key="LighRed">#E6D7D7</Color>
        <ControlTemplate x:Key="TabItemTemplate">
            <StackLayout>
                <Frame
                    Margin="2"
                    Padding="5"
                    BackgroundColor="{TemplateBinding CurrentBadgeBackgroundColor}"
                    CornerRadius="10"
                    HasShadow="False"
                    HeightRequest="93">
                    <Grid RowSpacing="0" VerticalOptions="CenterAndExpand">
                        <Image
                            Grid.Row="0"
                            Margin="2"
                            xct:IconTintColorEffect.TintColor="{TemplateBinding CurrentTextColor}"
                            HeightRequest="28"
                            HorizontalOptions="Center"
                            Source="{TemplateBinding CurrentIcon}"
                            VerticalOptions="Center"
                            WidthRequest="28" />
                        <Label
                            Grid.Row="1"
                            FontSize="13"
                            HorizontalOptions="Center"
                            Text="{TemplateBinding Text}"
                            TextColor="{TemplateBinding CurrentTextColor}" />
                    </Grid>
                </Frame>
            </StackLayout>
        </ControlTemplate>
        <ControlTemplate x:Key="RecipientTabItemTemplate">
            <StackLayout>
                <Frame
                    Margin="2"
                    Padding="5"
                    BackgroundColor="{TemplateBinding CurrentBadgeBackgroundColor}"
                    CornerRadius="10"
                    HasShadow="False"
                    HeightRequest="34">
                    <Grid VerticalOptions="CenterAndExpand">
                        <Label
                            FontSize="13"
                            HorizontalOptions="Center"
                            Text="{TemplateBinding Text}"
                            TextColor="{TemplateBinding CurrentTextColor}" />
                    </Grid>
                </Frame>
            </StackLayout>
        </ControlTemplate>
        <Style TargetType="xct:TabViewItem">
            <Setter Property="BadgeBackgroundColor" Value="{AppThemeBinding Dark={StaticResource DarkBackground}, Light={StaticResource LightBackground}}" />
            <Setter Property="BadgeBackgroundColorSelected" Value="{AppThemeBinding Dark={StaticResource PrimaryDarkLighten}, Light={StaticResource PrimaryForLight}}" />
            <Setter Property="ControlTemplate" Value="{StaticResource TabItemTemplate}" />
            <Setter Property="TextColor" Value="{StaticResource PrimaryForLight}" />
            <Setter Property="TextColorSelected" Value="{AppThemeBinding Dark={StaticResource Primary}, Light={StaticResource PrimaryLight}}" />
        </Style>
        <Style x:Key="RecipientTaps" TargetType="xct:TabViewItem">
            <Setter Property="ControlTemplate" Value="{StaticResource RecipientTabItemTemplate}" />
        </Style>
        <Style x:Key="PrivateKey" TargetType="xct:TabViewItem">
            <Setter Property="Icon" Value="{FontImage Size=35, FontFamily=icomoon, Glyph={x:Static fi:IconFont.PrivateKey}}" />
            <Setter Property="Text" Value="From private key" />
        </Style>
        <Style x:Key="FileKey" TargetType="xct:TabViewItem">
            <Setter Property="Icon" Value="{FontImage Size=35, FontFamily=icomoon, Glyph={x:Static fi:IconFont.FileKey}}" />
            <Setter Property="Text" Value="From wallet file" />
        </Style>
        <Style ApplyToDerivedTypes="True" TargetType="IndicatorView">
            <Setter Property="SelectedIndicatorColor" Value="{AppThemeBinding Dark={StaticResource PrimaryDark}, Light={StaticResource SelectedColorLight}}" />
            <Setter Property="IndicatorColor" Value="{AppThemeBinding Dark={StaticResource UnSelectedColorDark}, Light={StaticResource UnSelectedColorLight}}" />
            <Setter Property="IndicatorsShape" Value="Circle" />
            <Setter Property="IndicatorSize" Value="10" />
        </Style>
        <Style ApplyToDerivedTypes="True" TargetType="Button">
            <Setter Property="BackgroundColor" Value="{AppThemeBinding Dark={StaticResource PrimaryDarkLighten}, Light={StaticResource PrimaryForLight}}" />
            <Setter Property="TextColor" Value="{AppThemeBinding Dark={StaticResource Primary}, Light={StaticResource PrimaryLight}}" />
            <Setter Property="CornerRadius" Value="10" />
            <Setter Property="HeightRequest" Value="48" />
            <Setter Property="FontSize" Value="13" />
            <Setter Property="FontFamily" Value="SemiBold" />
            <Setter Property="Visual" Value="Default" />
            <Setter Property="TextTransform" Value="None" />
        </Style>

        <Style x:Key="LableButton" TargetType="Button">
            <Setter Property="BackgroundColor" Value="Transparent" />
            <Setter Property="TextColor" Value="{StaticResource PrimaryForLight}" />
        </Style>
        <Style x:Key="DeleteButton" TargetType="Button">
            <Setter Property="BackgroundColor" Value="{AppThemeBinding Dark={StaticResource DeleteBackGround}, Light={StaticResource DeleteRed}}" />
            <Setter Property="TextColor" Value="{AppThemeBinding Dark={StaticResource DeleteRed}, Light={StaticResource PrimaryLight}}" />
        </Style>
        <Style x:Key="RandomizeButton" TargetType="Button">
            <Setter Property="BackgroundColor" Value="{AppThemeBinding Dark={StaticResource PrimaryDarker}, Light={StaticResource PrimaryForLight}}" />
            <Setter Property="ImageSource" Value="{AppThemeBinding Dark={FontImage Size=20, Color=#CCF1FF, FontFamily=icomoon, Glyph={x:Static fi:IconFont.Shuffle}}, Light={FontImage Size=20, Color=#ffffff, FontFamily=icomoon, Glyph={x:Static fi:IconFont.Shuffle}}}" />
            <Setter Property="TextColor" Value="{AppThemeBinding Dark=#CCF1FF, Light=#ffffff}" />
            <Setter Property="ContentLayout" Value="Right" />
            <Setter Property="Text" Value="Randomize password" />
        </Style>
        <Style x:Key="NextButton" TargetType="Button">
            <Setter Property="ImageSource" Value="{AppThemeBinding Dark={FontImage Size=20, Color={StaticResource Primary}, FontFamily=icomoon, Glyph={x:Static fi:IconFont.Next}}, Light={FontImage Size=20, Color={StaticResource PrimaryLight}, FontFamily=icomoon, Glyph={x:Static fi:IconFont.Next}}}" />
            <Setter Property="ContentLayout" Value="Right" />
            <Setter Property="Text" Value="Next" />
        </Style>
        <Style x:Key="ConfirmButton" TargetType="Button">
            <Setter Property="ImageSource" Value="{AppThemeBinding Dark={FontImage Size=20, Color={StaticResource Primary}, FontFamily=icomoon, Glyph={x:Static fi:IconFont.Done}}, Light={FontImage Size=20, Color={StaticResource PrimaryLight}, FontFamily=icomoon, Glyph={x:Static fi:IconFont.Done}}}" />
            <Setter Property="ContentLayout" Value="Right,-26" />
            <Setter Property="Text" Value="Confirm" />
        </Style>
        <Style x:Key="PrevButton" TargetType="Button">
            <Setter Property="ImageSource" Value="{AppThemeBinding Dark={FontImage Size=20, Color={StaticResource Primary}, FontFamily=icomoon, Glyph={x:Static fi:IconFont.Prev}}, Light={FontImage Size=20, Color={StaticResource PrimaryLight}, FontFamily=icomoon, Glyph={x:Static fi:IconFont.Prev}}}" />
            <Setter Property="ContentLayout" Value="Left" />
            <Setter Property="Text" Value="Prev" />
        </Style>
        <Style x:Key="CopyHashButton" TargetType="Button">
            <Setter Property="ImageSource" Value="{AppThemeBinding Dark={FontImage Size=20, Color={StaticResource Primary}, FontFamily=icomoon, Glyph={x:Static fi:IconFont.Copy}}, Light={FontImage Size=20, Color={StaticResource PrimaryLight}, FontFamily=icomoon, Glyph={x:Static fi:IconFont.Copy}}}" />
            <Setter Property="ContentLayout" Value="Right" />
            <Setter Property="Text" Value="Next" />
        </Style>
        <Style x:Key="Outline" TargetType="Button">
            <Setter Property="BackgroundColor" Value="Transparent" />
            <Setter Property="TextColor" Value="{StaticResource PrimaryForLight}" />
            <Setter Property="BorderColor" Value="{StaticResource PrimaryForLight}" />
        </Style>


        <Style ApplyToDerivedTypes="True" TargetType="Frame">
            <Setter Property="CornerRadius" Value="20" />
            <Setter Property="BackgroundColor" Value="{AppThemeBinding Dark={StaticResource Secondary}, Light={StaticResource LightBackground}}" />
            <Setter Property="Visual" Value="Material" />
        </Style>
        <Style x:Key="Container" TargetType="Frame">
            <Setter Property="Padding" Value="2" />
            <Setter Property="CornerRadius" Value="10" />
            <Setter Property="BackgroundColor" Value="{AppThemeBinding Dark={StaticResource DarkBackground}, Light={StaticResource LightBackground}}" />
            <Setter Property="BorderColor" Value="{AppThemeBinding Dark={StaticResource PrimaryDarkLighten}, Light=#DDEAEE}" />
            <Setter Property="HasShadow" Value="False" />
        </Style>
        <Style x:Key="PopupHandle" TargetType="Frame">
            <Setter Property="Padding" Value="0" />
            <Setter Property="Opacity" Value="0.3" />
            <Setter Property="CornerRadius" Value="4" />
            <Setter Property="HeightRequest" Value="4" />
            <Setter Property="WidthRequest" Value="40" />
            <Setter Property="BackgroundColor" Value="#E9E9E9" />
        </Style>
        <Style x:Key="AccountColor" TargetType="Frame">
            <Setter Property="Padding" Value="0" />
            <Setter Property="CornerRadius" Value="8" />
            <Setter Property="HeightRequest" Value="60" />
            <Setter Property="WidthRequest" Value="60" />
        </Style>
        <Style x:Key="KeyFrame" TargetType="Frame">
            <Setter Property="Padding" Value="15,10,15,10" />
            <Setter Property="CornerRadius" Value="6" />
            <Setter Property="BackgroundColor" Value="{AppThemeBinding Dark=#203039, Light=#DDEAEE}" />
            <Setter Property="IsClippedToBounds" Value="True" />
            <Setter Property="HasShadow" Value="False" />

        </Style>
        <Style x:Key="ButtonFrame" TargetType="Frame">
            <Setter Property="Padding" Value="8,0,8,0" />
            <Setter Property="CornerRadius" Value="6" />
            <Setter Property="BackgroundColor" Value="{AppThemeBinding Dark={StaticResource PrimaryDarkLighten}, Light={StaticResource PrimaryForLight}}" />
            <Setter Property="IsClippedToBounds" Value="True" />
        </Style>
        <Style x:Key="SqureFrame" TargetType="Frame">
            <Setter Property="CornerRadius" Value="0" />
            <Setter Property="BorderColor" Value="{AppThemeBinding Dark={StaticResource Primary}, Light={StaticResource PrimaryDark}}" />
            <Setter Property="BackgroundColor" Value="Transparent" />
            <Setter Property="Padding" Value="10" />
        </Style>
        <Style x:Key="AccountCard" TargetType="Frame">
            <Setter Property="Padding" Value="0" />
            <Setter Property="CornerRadius" Value="10" />
            <Setter Property="BackgroundColor" Value="{AppThemeBinding Dark={StaticResource DarkBackground}, Light={StaticResource LightBackground}}" />
            <Setter Property="IsClippedToBounds" Value="True" />
        </Style>
        <Style x:Key="TransactionCard" TargetType="Frame">
            <Setter Property="Padding" Value="0" />
            <Setter Property="CornerRadius" Value="6" />
            <Setter Property="BackgroundColor" Value="{AppThemeBinding Dark={StaticResource DarkBackground}, Light={StaticResource LightBackground}}" />
            <Setter Property="IsClippedToBounds" Value="True" />
        </Style>
        <Style x:Key="AccountGrid" TargetType="Grid">
            <Setter Property="Padding" Value="0" />
            <Setter Property="BackgroundColor" Value="{AppThemeBinding Dark={StaticResource DarkBackground}, Light={StaticResource LightBackground}}" />
        </Style>
        <Style x:Key="BadgeFrame" TargetType="Frame">
            <Setter Property="BackgroundColor" Value="{AppThemeBinding Dark=#ec790f, Light=#62d260}" />
            <Setter Property="Padding" Value="0" />
            <Setter Property="HeightRequest" Value="14" />
            <Setter Property="WidthRequest" Value="14" />
            <Setter Property="CornerRadius" Value="7" />
        </Style>
        <Style ApplyToDerivedTypes="True" TargetType="RadioButton">
            <Setter Property="BackgroundColor" Value="Transparent" />
            <Setter Property="BorderColor" Value="{StaticResource Primary}" />
        </Style>
        <Style ApplyToDerivedTypes="True" TargetType="CheckBox">
            <Setter Property="BackgroundColor" Value="Transparent" />
            <Setter Property="Color" Value="{StaticResource Primary}" />
        </Style>
        <Style ApplyToDerivedTypes="True" TargetType="ContentPage">
            <Setter Property="BackgroundColor" Value="{AppThemeBinding Dark={StaticResource Secondary}, Light={StaticResource PrimaryLight}}" />
        </Style>

        <Style ApplyToDerivedTypes="True" TargetType="ImageButton">
            <Setter Property="BackgroundColor" Value="Transparent" />
            <Setter Property="HeightRequest" Value="33" />
            <Setter Property="WidthRequest" Value="33" />
            <Setter Property="Padding" Value="5" />
            <Setter Property="CornerRadius" Value="8" />
            <Setter Property="xct:IconTintColorEffect.TintColor" Value="{AppThemeBinding Dark={StaticResource PrimaryLight}, Light={StaticResource PrimaryDark}}" />
        </Style>
        <Style x:Key="DashBoard" TargetType="ImageButton">
            <Setter Property="BackgroundColor" Value="{AppThemeBinding Dark={StaticResource PrimaryDarkLighten}, Light={StaticResource PrimaryForLight}}" />
            <Setter Property="HeightRequest" Value="60" />
            <Setter Property="WidthRequest" Value="60" />
            <Setter Property="Padding" Value="16" />
            <Setter Property="CornerRadius" Value="8" />
            <Setter Property="xct:IconTintColorEffect.TintColor" Value="{AppThemeBinding Dark={StaticResource Primary}, Light={StaticResource PrimaryLight}}" />
        </Style>
        <Style x:Key="ArrowLeft" TargetType="ImageButton">
            <Setter Property="Source" Value="{FontImage Size=35, FontFamily=icomoon, Glyph={x:Static fi:IconFont.ArrowLeft}}" />
        </Style>
        <Style x:Key="Prev" TargetType="ImageButton">
            <Setter Property="Source" Value="{FontImage Size=35, FontFamily=icomoon, Glyph={x:Static fi:IconFont.Prev}}" />
            <Setter Property="HeightRequest" Value="28" />
        </Style>
        <Style x:Key="Next" TargetType="ImageButton">
            <Setter Property="Source" Value="{FontImage Size=35, FontFamily=icomoon, Glyph={x:Static fi:IconFont.Next}}" />
        </Style>
        <Style x:Key="Watch" TargetType="ImageButton">
            <Setter Property="Source" Value="{FontImage Size=35, FontFamily=icomoon, Glyph={x:Static fi:IconFont.Watch}}" />
        </Style>
        <Style x:Key="Done" TargetType="ImageButton">
            <Setter Property="Source" Value="{FontImage Size=35, FontFamily=icomoon, Glyph={x:Static fi:IconFont.Done}}" />
        </Style>
        <Style x:Key="Check" TargetType="ImageButton">
            <Setter Property="Source" Value="{FontImage Size=35, FontFamily=icomoon, Glyph={x:Static fi:IconFont.Done}}" />
            <Setter Property="xct:IconTintColorEffect.TintColor" Value="{StaticResource Primary}" />
            <Style.Triggers>
                <Trigger TargetType="ImageButton" Property="IsEnabled" Value="False">
                    <Setter Property="xct:IconTintColorEffect.TintColor" Value="{AppThemeBinding Dark={StaticResource PrimaryDarkLighten}, Light={StaticResource UnSelectedColorLight}}" />
                </Trigger>
            </Style.Triggers>
        </Style>
        <Style x:Key="Close" TargetType="ImageButton">
            <Setter Property="Source" Value="{FontImage Size=35, FontFamily=icomoon, Glyph={x:Static fi:IconFont.Close}}" />
            <Setter Property="BackgroundColor" Value="Transparent" />
        </Style>
        <Style x:Key="Clear" TargetType="ImageButton">
            <Setter Property="Source" Value="{FontImage Size=35, FontFamily=icomoon, Glyph={x:Static fi:IconFont.Close}}" />
            <Setter Property="BackgroundColor" Value="Transparent" />
            <Setter Property="xct:IconTintColorEffect.TintColor" Value="{StaticResource Red}" />
        </Style>
        <Style x:Key="Shuffle" TargetType="ImageButton">
            <Setter Property="Source" Value="{FontImage Size=35, FontFamily=icomoon, Glyph={x:Static fi:IconFont.Shuffle}}" />
            <Setter Property="BackgroundColor" Value="{AppThemeBinding Dark={StaticResource PrimaryDarker}, Light={StaticResource PrimaryForLight}}" />
            <Setter Property="xct:IconTintColorEffect.TintColor" Value="{AppThemeBinding Dark=#425864, Light={StaticResource PrimaryLight}}" />
        </Style>
        <Style
            x:Key="Accounts"
            BasedOn="{StaticResource DashBoard}"
            TargetType="ImageButton">
            <Setter Property="Source" Value="{FontImage Size=45, FontFamily=icomoon, Glyph={x:Static fi:IconFont.Accounts}}" />
        </Style>
        <Style
            x:Key="Authors"
            BasedOn="{StaticResource DashBoard}"
            TargetType="ImageButton">
            <Setter Property="Source" Value="{FontImage Size=45, FontFamily=icomoon, Glyph={x:Static fi:IconFont.Authors}}" />
        </Style>
        <Style
            x:Key="Auctions"
            BasedOn="{StaticResource DashBoard}"
            TargetType="ImageButton">
            <Setter Property="Source" Value="{FontImage Size=45, FontFamily=icomoon, Glyph={x:Static fi:IconFont.Auctions}}" />
        </Style>
        <Style
            x:Key="Products"
            BasedOn="{StaticResource DashBoard}"
            TargetType="ImageButton">
            <Setter Property="Source" Value="{FontImage Size=45, FontFamily=icomoon, Glyph={x:Static fi:IconFont.Products}}" />
        </Style>
        <Style
            x:Key="Transactions"
            BasedOn="{StaticResource DashBoard}"
            TargetType="ImageButton">
            <Setter Property="Source" Value="{FontImage Size=45, FontFamily=icomoon, Glyph={x:Static fi:IconFont.Transactions}}" />
        </Style>
        <Style
            x:Key="Search"
            BasedOn="{StaticResource DashBoard}"
            TargetType="ImageButton">
            <Setter Property="Source" Value="{FontImage Size=45, FontFamily=icomoon, Glyph={x:Static fi:IconFont.Search}}" />
        </Style>
        <Style
            x:Key="Network"
            BasedOn="{StaticResource DashBoard}"
            TargetType="ImageButton">
            <Setter Property="Source" Value="{FontImage Size=45, FontFamily=icomoon, Glyph={x:Static fi:IconFont.Network}}" />
        </Style>
        <Style
            x:Key="Transfer"
            BasedOn="{StaticResource DashBoard}"
            TargetType="ImageButton">
            <Setter Property="Source" Value="{FontImage Size=45, FontFamily=icomoon, Glyph={x:Static fi:IconFont.Transfer}}" />
        </Style>
        <Style
            x:Key="Help"
            BasedOn="{StaticResource DashBoard}"
            TargetType="ImageButton">
            <Setter Property="Source" Value="{FontImage Size=45, FontFamily=icomoon, Glyph={x:Static fi:IconFont.Help}}" />
        </Style>
        <Style x:Key="Sort" TargetType="ImageButton">
            <Setter Property="Source" Value="{FontImage Size=35, FontFamily=icomoon, Glyph={x:Static fi:IconFont.Name32}}" />
            <Setter Property="BackgroundColor" Value="Transparent" />
        </Style>
        <Style x:Key="Delete" TargetType="ImageButton">
            <Setter Property="Source" Value="{FontImage Size=35, FontFamily=icomoon, Glyph={x:Static fi:IconFont.Trash}}" />
            <Setter Property="xct:IconTintColorEffect.TintColor" Value="{StaticResource Red}" />
        </Style>
        <Style x:Key="Random" TargetType="ImageButton">
            <Setter Property="Source" Value="{FontImage Size=35, FontFamily=icomoon, Glyph={x:Static fi:IconFont.Random}}" />
            <Setter Property="xct:IconTintColorEffect.TintColor" Value="{StaticResource PrimaryDarkLighten}" />
            <Setter Property="Padding" Value="0" />
        </Style>
        <Style x:Key="Bell1" TargetType="ImageButton">
            <Setter Property="Source" Value="{FontImage Size=35, FontFamily=icomoon, Glyph={x:Static fi:IconFont.Bell1}}" />
        </Style>
        <Style x:Key="Bell2" TargetType="ImageButton">
            <Setter Property="Source" Value="{FontImage Size=35, FontFamily=icomoon, Glyph={x:Static fi:IconFont.Bell2}}" />
        </Style>
        <Style x:Key="Dots" TargetType="ImageButton">
            <Setter Property="Source" Value="{FontImage Size=35, FontFamily=icomoon, Glyph={x:Static fi:IconFont.Dots}}" />
        </Style>
        <Style
            x:Key="Receive"
            BasedOn="{StaticResource DashBoard}"
            TargetType="ImageButton">
            <Setter Property="Source" Value="{FontImage Size=35, FontFamily=icomoon, Glyph={x:Static fi:IconFont.Receive}}" />
        </Style>
        <Style
            x:Key="Send"
            BasedOn="{StaticResource DashBoard}"
            TargetType="ImageButton">
            <Setter Property="Source" Value="{FontImage Size=35, FontFamily=icomoon, Glyph={x:Static fi:IconFont.Send}}" />
        </Style>
        <Style
            x:Key="Hide"
            BasedOn="{StaticResource DashBoard}"
            TargetType="ImageButton">
            <Setter Property="Source" Value="{FontImage Size=35, FontFamily=icomoon, Glyph={x:Static fi:IconFont.Hide}}" />
        </Style>
        <Style
            x:Key="TransferProduct"
            BasedOn="{StaticResource DashBoard}"
            TargetType="ImageButton">
            <Setter Property="Source" Value="{FontImage Size=35, FontFamily=icomoon, Glyph={x:Static fi:IconFont.TransferProduct}}" />
        </Style>
        <Style
            x:Key="TransferAuthor"
            BasedOn="{StaticResource DashBoard}"
            TargetType="ImageButton">
            <Setter Property="Source" Value="{FontImage Size=35, FontFamily=icomoon, Glyph={x:Static fi:IconFont.TransferAuthor}}" />
        </Style>
        <Style
            x:Key="Bid"
            BasedOn="{StaticResource DashBoard}"
            TargetType="ImageButton">
            <Setter Property="Source" Value="{FontImage Size=35, FontFamily=icomoon, Glyph={x:Static fi:IconFont.Bid}}" />
        </Style>
        <Style x:Key="SearchIcon" TargetType="Image">
            <Setter Property="Source" Value="{FontImage Size=35, FontFamily=icomoon, Glyph={x:Static fi:IconFont.Search}}" />
            <Setter Property="xct:IconTintColorEffect.TintColor" Value="{AppThemeBinding Dark=#4E7B89, Light=#A0C1CC}" />
            <Setter Property="HeightRequest" Value="20" />
            <Setter Property="WidthRequest" Value="20" />
        </Style>
        <Style x:Key="RightArrowIcon" TargetType="Image">
            <Setter Property="Source" Value="{FontImage Size=35, FontFamily=icomoon, Glyph={x:Static fi:IconFont.ArrowRight}}" />
            <Setter Property="xct:IconTintColorEffect.TintColor" Value="{AppThemeBinding Dark={StaticResource Primary}, Light={StaticResource PrimaryForLight}}" />
            <Setter Property="HeightRequest" Value="30" />
            <Setter Property="WidthRequest" Value="30" />
        </Style>
        <Style x:Key="TopArrowIcon" TargetType="Image">
            <Setter Property="Source" Value="{FontImage Size=35, FontFamily=icomoon, Glyph={x:Static fi:IconFont.ArrowTop}}" />
            <Setter Property="xct:IconTintColorEffect.TintColor" Value="{AppThemeBinding Dark=#ffffff, Light=#1E5468}" />
            <Setter Property="HeightRequest" Value="22" />
            <Setter Property="WidthRequest" Value="22" />
        </Style>
        <Style x:Key="BottomArrowIcon" TargetType="Image">
            <Setter Property="Source" Value="{FontImage Size=35, FontFamily=icomoon, Glyph={x:Static fi:IconFont.ArrowBottom}}" />
            <Setter Property="xct:IconTintColorEffect.TintColor" Value="{AppThemeBinding Dark=#ffffff, Light=#1E5468}" />
            <Setter Property="HeightRequest" Value="22" />
            <Setter Property="WidthRequest" Value="22" />
        </Style>
        <Style x:Key="BottomArrowsIcon" TargetType="Image">
            <Setter Property="Source" Value="{FontImage Size=35, FontFamily=icomoon, Glyph={x:Static fi:IconFont.ArrowsBottom}}" />
            <Setter Property="xct:IconTintColorEffect.TintColor" Value="{AppThemeBinding Dark=#ffffff, Light=#1E5468}" />
            <Setter Property="HeightRequest" Value="22" />
            <Setter Property="WidthRequest" Value="22" />
        </Style>
        <Style ApplyToDerivedTypes="True" TargetType="ListView">
            <Setter Property="SeparatorVisibility" Value="None" />
            <Setter Property="HasUnevenRows" Value="True" />
            <Setter Property="SelectionMode" Value="None" />
            <Setter Property="BackgroundColor" Value="Transparent" />
        </Style>
        <Style ApplyToDerivedTypes="True" TargetType="Picker">
            <Setter Property="TextColor" Value="White" />
            <Setter Property="TitleColor" Value="GhostWhite" />
            <Setter Property="FontSize" Value="14" />
            <Setter Property="FontFamily" Value="SemiBold" />
        </Style>
        <Style ApplyToDerivedTypes="True" TargetType="Label">
            <Setter Property="TextColor" Value="{AppThemeBinding Dark={StaticResource PrimaryLight}, Light={StaticResource PrimaryDark}}" />
            <Setter Property="FontSize" Value="14" />
            <Setter Property="Opacity" Value="0.9" />
            <Setter Property="FontFamily" Value="SemiBold" />
        </Style>
        <Style
            x:Key="Light"
            ApplyToDerivedTypes="True"
            TargetType="Label">
            <Setter Property="FontSize" Value="11" />
            <Setter Property="FontFamily" Value="Light" />
        </Style>
        <Style
            x:Key="Medium"
            ApplyToDerivedTypes="True"
            TargetType="Label">
            <Setter Property="FontSize" Value="11" />
            <Setter Property="FontFamily" Value="Medium" />
        </Style>
        <Style
            x:Key="Regular"
            ApplyToDerivedTypes="True"
            TargetType="Label">
            <Setter Property="FontSize" Value="11" />
            <Setter Property="FontFamily" Value="Regular" />

        </Style>
        <Style
            x:Key="SubText"
            ApplyToDerivedTypes="True"
            TargetType="Label">
            <Setter Property="FontSize" Value="13" />
            <Setter Property="FontFamily" Value="Regular" />
            <Setter Property="TextColor" Value="{AppThemeBinding Dark={StaticResource SubTextColorDark}, Light={StaticResource SubTextColorLight}}" />
        </Style>
        <Style
            x:Key="Bold"
            ApplyToDerivedTypes="True"
            TargetType="Label">
            <Setter Property="FontSize" Value="11" />
            <Setter Property="FontFamily" Value="Regular" />
        </Style>
        <Style
            x:Key="CodeLabel"
            ApplyToDerivedTypes="True"
            TargetType="Label">
            <Setter Property="TextColor" Value="{AppThemeBinding Dark={StaticResource Secondary}, Light={StaticResource PrimaryLight}}" />
        </Style>
        <Style
            x:Key="UNTLabel"
            ApplyToDerivedTypes="True"
            TargetType="Label">
            <Setter Property="FontSize" Value="12" />
            <Setter Property="TextColor" Value="{AppThemeBinding Dark=#1F3F51, Light=#B2CAD2}" />
        </Style>
        <Style
            x:Key="DashLabel"
            ApplyToDerivedTypes="True"
            TargetType="Label">
            <Setter Property="TextColor" Value="{AppThemeBinding Dark={StaticResource Primary}, Light={StaticResource PrimaryDark}}" />
            <Setter Property="FontSize" Value="13" />
        </Style>
        <Style
            x:Key="ButtonLabel"
            ApplyToDerivedTypes="True"
            TargetType="Label">
            <Setter Property="TextColor" Value="{AppThemeBinding Dark={StaticResource Primary}, Light={StaticResource PrimaryLight}}" />
            <Setter Property="FontSize" Value="11" />
            <Setter Property="FontFamily" Value="Medium" />
        </Style>
        <Style ApplyToDerivedTypes="True" TargetType="Entry">
            <Setter Property="TextColor" Value="White" />
            <Setter Property="FontSize" Value="14" />
            <Setter Property="PlaceholderColor" Value="GhostWhite" />
            <Setter Property="FontFamily" Value="Medium" />
        </Style>
        <Style ApplyToDerivedTypes="True" TargetType="SearchBar">
            <Setter Property="TextColor" Value="White" />
            <Setter Property="PlaceholderColor" Value="GhostWhite" />
            <Setter Property="FontSize" Value="14" />
            <Setter Property="FontFamily" Value="Medium" />
        </Style>
        <Style ApplyToDerivedTypes="True" TargetType="cls:BorderPicker">
            <Setter Property="TextColor" Value="Black" />
            <Setter Property="FontSize" Value="16" />
            <Setter Property="BorderWidth" Value="1" />
            <Setter Property="BorderRadius" Value="8" />
            <Setter Property="HeightRequest" Value="40" />
            <Setter Property="FillColor" Value="{AppThemeBinding Dark={StaticResource DarkBackground}, Light={StaticResource LightBackground}}" />
            <Setter Property="TitleColor" Value="LightGray" />
            <Setter Property="FontFamily" Value="Medium" />
            <Setter Property="BorderColor" Value="LightGray" />
        </Style>
        <Style ApplyToDerivedTypes="True" TargetType="cls:BorderEntry">
            <Setter Property="TextColor" Value="{AppThemeBinding Dark={StaticResource PrimaryLight}, Light={StaticResource PrimaryDark}}" />
            <Setter Property="FontSize" Value="13" />
            <Setter Property="BorderWidth" Value="0.7" />
            <Setter Property="BorderRadius" Value="8" />
            <Setter Property="LeftPadding" Value="15" />
            <Setter Property="RightPadding" Value="15" />
            <Setter Property="HeightRequest" Value="45" />
            <Setter Property="FillColor" Value="{AppThemeBinding Dark={StaticResource DarkBackground}, Light={StaticResource LightBackground}}" />
            <Setter Property="PlaceholderColor" Value="LightGray" />
            <Setter Property="FontFamily" Value="SemiBold" />
            <Setter Property="BorderColor" Value="{AppThemeBinding Dark={StaticResource PrimaryDarkLighten}, Light=#DDEAEE}" />
            <Setter Property="ClearButtonVisibility" Value="WhileEditing" />
        </Style>
        <Style ApplyToDerivedTypes="True" TargetType="cls:BorderEditor">
            <Setter Property="TextColor" Value="{AppThemeBinding Dark={StaticResource PrimaryLight}, Light={StaticResource PrimaryDark}}" />
            <Setter Property="FontSize" Value="13" />
            <Setter Property="BorderWidth" Value="0.7" />
            <Setter Property="BorderRadius" Value="8" />
            <Setter Property="LeftPadding" Value="15" />
            <Setter Property="RightPadding" Value="15" />
            <Setter Property="HeightRequest" Value="45" />
            <Setter Property="FillColor" Value="{AppThemeBinding Dark={StaticResource DarkBackground}, Light={StaticResource LightBackground}}" />
            <Setter Property="PlaceholderColor" Value="LightGray" />
            <Setter Property="FontFamily" Value="SemiBold" />
            <Setter Property="BorderColor" Value="{AppThemeBinding Dark={StaticResource PrimaryDarkLighten}, Light=#DDEAEE}" />
        </Style>
        <Style ApplyToDerivedTypes="True" TargetType="cls:SwitchView">
            <Setter Property="OffColor" Value="{AppThemeBinding Dark={StaticResource PrimaryDarkLighten}, Light={StaticResource PrimaryForLight}}" />
            <Setter Property="OnColor" Value="{StaticResource Primary}" />
            <Setter Property="CornerRadius" Value="3" />
            <Setter Property="HeightRequest" Value="24" />
        </Style>
        <Style x:Key="Valid" TargetType="cls:BorderEntry">
            <Setter Property="BorderColor" Value="{AppThemeBinding Dark={StaticResource PrimaryLight}, Light={StaticResource PrimaryDark}}" />
        </Style>
        <Style x:Key="InValid" TargetType="cls:BorderEntry">
            <Setter Property="BorderColor" Value="{StaticResource Red}" />
        </Style>
    </Application.Resources>
</Application>